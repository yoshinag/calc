[
  {
    "id": "mermaid-flowchart-lr",
    "name": "Mermaid: フローチャート (左->右)",
    "notation": "mermaid",
    "code": "graph LR\n    A[開始] --> B{判定}\n    B -- Yes --> C[処理1]\n    B -- No --> D[処理2]\n    C --> E[終了]\n    D --> E;"
  },
  {
    "id": "dot-simple",
    "name": "DOT: シンプルグラフ",
    "notation": "dot",
    "code": "digraph G {\n  rankdir=LR;\n  A [label=\"Start\"]\n  B [label=\"End\"]\n  A -> B;\n}"
  },
  {
    "id": "mermaid-sequence",
    "name": "Mermaid: シーケンス図",
    "notation": "mermaid",
    "code": "sequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    loop Healthcheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts<br/>prevail...\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!"
  },
  {
    "id": "mermaid-gantt",
    "name": "Mermaid: ガントチャート",
    "notation": "mermaid",
    "code": "gantt\n    dateFormat  YYYY-MM-DD\n    title Project Timeline\n    excludes    weekends\n    section Section A\n    Task 1            :a1, 2024-01-01, 30d\n    Task 2            :after a1  , 20d\n    section Critical tasks\n    Critical Task 1   :crit1, 2024-01-15, 15d"
  },
  {
    "id": "mermaid-class",
    "name": "Mermaid: クラス図",
    "notation": "mermaid",
    "code": "classDiagram\n    Animal <|-- Duck\n    Animal <|-- Fish\n    Animal : +int age\n    Animal: +isMammal()\n    class Duck{\n      +String beakColor\n      +swim()\n    }"
  },
  {
    "id": "mermaid-state",
    "name": "Mermaid: 状態遷移図",
    "notation": "mermaid",
    "code": "stateDiagram-v2\n    [*] --> Still\n    Still --> [*]\n    Still --> Moving\n    Moving --> Still"
  },
  {
    "id": "mermaid-pie",
    "name": "Mermaid: 円グラフ",
    "notation": "mermaid",
    "code": "pie title Fruits Distribution\n    \"Apples\" : 386\n    \"Bananas\" : 250\n    \"Oranges\" : 200"
  },
  {
    "id": "mermaid-er",
    "name": "Mermaid: ER図",
    "notation": "mermaid",
    "code": "erDiagram\n    CUSTOMER ||--o{ ORDER : places\n    ORDER ||--|{ LINE-ITEM : \"contains\"\n    CUSTOMER }|..|{ DELIVERY-ADDRESS : \"uses\""
  },
  {
    "id": "mermaid-git",
    "name": "Mermaid: Gitグラフ",
    "notation": "mermaid",
    "code": "gitGraph\n   commit id: \"A0\"\n   branch feature-A\n   commit id: \"A1\"\n   commit id: \"A2\"\n   checkout main\n   commit id: \"M1\"\n   merge feature-A id: \"merge-A\"\n   branch feature-B\n   commit id: \"B1\"\n   checkout main\n   commit id: \"M2\"\n   checkout feature-B\n   commit id: \"B2\"\n   checkout main\n   merge feature-B id: \"merge-B\"\n   commit id: \"C\""
  },
  {
    "id": "dot-state",
    "name": "DOT: 状態遷移図",
    "notation": "dot",
    "code": "digraph StateMachine {\n  rankdir=LR;\n  node [shape = circle];\n  S0 -> S1 [label=\"Event A\"];\n  S1 -> S2 [label=\"Event B\"];\n  S2 -> S0 [label=\"Event C\"];\n}"
  },
  {
    "id": "dot-complex-flowchart",
    "name": "DOT: 複雑なフローチャート",
    "notation": "dot",
    "code": "digraph ComplexFlowchart {\n  rankdir=TD;\n  node [shape=box, style=rounded];\n  Start [shape=ellipse];\n  End [shape=ellipse];\n  Input [label=\"データ入力\", shape=parallelogram];\n  Decision1 [label=\"条件1?\", shape=diamond];\n  Process1A [label=\"処理1A\"];\n  Start -> Input -> Decision1 -> Process1A -> End; \n}"
  },
  {
    "id": "dot-network",
    "name": "DOT: ネットワーク図",
    "notation": "dot",
    "code": "graph Network {\n  layout=neato;\n  node [shape=box, style=filled, color=lightblue];\n  Router1 -- ServerA;\n  Router1 -- ServerB;\n  ServerA -- Database1;\n}"
  }
]